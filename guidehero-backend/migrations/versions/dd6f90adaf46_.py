"""empty message

Revision ID: dd6f90adaf46
Revises: None
Create Date: 2016-10-10 00:48:59.109172

"""

# revision identifiers, used by Alembic.
revision = 'dd6f90adaf46'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('stripped_email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=255), nullable=True),
    sa.Column('linkedin_profile', sa.String(length=255), nullable=True),
    sa.Column('linkedin_headline', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('stripped_email')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('base_folder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('root_level', sa.Boolean(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('creator', sa.String(length=255), nullable=True),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['base_folder.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_skill',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=50), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'skill_id')
    )
    op.create_table('card',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('content', sa.String(length=255), nullable=True),
    sa.Column('language', sa.String(length=255), nullable=True),
    sa.Column('pronunciation', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('base_deck',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('folder_id', sa.Integer(), nullable=True),
    sa.Column('creator', sa.String(length=255), nullable=True),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], ['base_folder.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('search',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('searched_at', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('keyword', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expert_request',
    sa.Column('requested_at', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('expert_id', sa.String(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('expires_at', sa.Integer(), nullable=True),
    sa.Column('approx_call_time', sa.Integer(), nullable=True),
    sa.Column('price_per_min', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['expert_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('requested_at', 'user_id', 'expert_id', 'skill_id')
    )
    op.create_table('device',
    sa.Column('device_token', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('device_type', sa.String(length=10), nullable=False),
    sa.Column('updated_at', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('device_token', 'user_id', 'device_type')
    )
    op.create_table('call',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('user_id_1', sa.String(length=255), nullable=True),
    sa.Column('user_id_2', sa.String(length=255), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('initiated_at', sa.Integer(), nullable=True),
    sa.Column('connected_at', sa.Integer(), nullable=True),
    sa.Column('ended_at', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id_1'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id_2'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_skills',
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.String(length=255), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('base_set',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('deck_id', sa.Integer(), nullable=True),
    sa.Column('creator', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['deck_id'], ['base_deck.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('card_to_card',
    sa.Column('parent_id', sa.String(), nullable=False),
    sa.Column('child_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['card.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['card.id'], ),
    sa.PrimaryKeyConstraint('parent_id', 'child_id')
    )
    op.create_table('base_card',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('public', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['set_id'], ['base_set.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('base_card_content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('content', sa.String(length=255), nullable=True),
    sa.Column('language', sa.String(length=255), nullable=True),
    sa.Column('card_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['base_card.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('base_card_content')
    op.drop_table('base_card')
    op.drop_table('card_to_card')
    op.drop_table('base_set')
    op.drop_table('roles_users')
    op.drop_table('user_skills')
    op.drop_table('call')
    op.drop_table('device')
    op.drop_table('expert_request')
    op.drop_table('search')
    op.drop_table('base_deck')
    op.drop_table('card')
    op.drop_table('user_skill')
    op.drop_table('base_folder')
    op.drop_table('role')
    op.drop_table('skill')
    op.drop_table('tag')
    op.drop_table('user')
    ### end Alembic commands ###
